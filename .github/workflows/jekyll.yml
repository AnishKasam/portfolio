# .github/workflows/deploy-jekyll.yml

name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential libssl-dev libreadline-dev zlib1g-dev

      # ------------------------------------------------------------------------------------
      # (Option A) Manual Ruby Installation in $RUNNER_TOOL_CACHE
      # Uncomment these lines IF you want to compile/maintain Ruby manually:
      #
      # - name: Install Ruby in $RUNNER_TOOL_CACHE
      #   env:
      #     RUBY_VERSION: 3.1.3  # <-- set whichever version you want
      #     RUNNER_TOOL_CACHE: ${{ env.RUNNER_TOOL_CACHE }}
      #   run: |
      #     mkdir -p $RUNNER_TOOL_CACHE/Ruby/$RUBY_VERSION/x64
      #     cd $RUNNER_TOOL_CACHE/Ruby/$RUBY_VERSION/x64
      #     wget https://cache.ruby-lang.org/pub/ruby/3.1/ruby-${RUBY_VERSION}.tar.gz
      #     tar xzf ruby-${RUBY_VERSION}.tar.gz
      #     cd ruby-${RUBY_VERSION}
      #     ./configure --prefix=$RUNNER_TOOL_CACHE/Ruby/$RUBY_VERSION/x64
      #     make
      #     make install
      #     echo "$RUNNER_TOOL_CACHE/Ruby/$RUBY_VERSION/x64" > $RUNNER_TOOL_CACHE/Ruby/$RUBY_VERSION/x64.complete
      #
      # - name: Add Ruby to PATH
      #   run: echo "$RUNNER_TOOL_CACHE/Ruby/${RUBY_VERSION}/x64/bin" >> $GITHUB_PATH
      #
      # - name: Verify Ruby installation
      #   run: ruby --version
      #
      # ------------------------------------------------------------------------------------
      # (Option B) Use official ruby/setup-ruby action
      # This is simpler and recommended for GitHub-hosted runners:
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2'
          bundler-cache: true
          cache-version: 0

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build with Jekyll
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
